<!doctype html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css" />
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 50%; }
      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }

      .chatside { margin: 0; padding: 0; height: 100%; width: 50%; position: fixed; }
      .mapside { margin: 0; padding: 0; height: 100%; width: 50%; margin-left: 50%; position: fixed; }
      #map { margin: 0; padding: 0; height: 300px; width: 100%; }

      .leaflet-label { font: 14px bold "Meiryo"; width: 50px; }
    </style>
  </head>
  <body>
    <div class="chatside">
      <ul id="messages"></ul>
      <form action="" ="まずは名前を入れましょう">
        <input id="m" autocomplete="off" placeholder="まずは名前を入力" /><button>Send</button>
      </form>
    </div>
    <div class="mapside">
      <div id="map"></div>
    </div>

    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js"></script>
    <script src="http://cdn.jsdelivr.net/leaflet.esri/latest/esri-leaflet.js"></script>
    <script src="http://leaflet.github.io/Leaflet.label/leaflet.label.js"></script>
    <script>
      // チャット用の変数
      var firstPost = true;
      var myname = null;
      var socket = io();
      var currentMsg = "";

      // マップ用の変数
      var map;
      var markers = []; // {marker: marker object, name: user name, currentMsg: current masage}

      // チャット
      $('form').submit(function() {
        console.log("submit!!: ", $('#m').val());
        if(firstPost === false) {
          socket.emit('chat message', {
            name: myname,
            text: $('#m').val()
          });
          currentMsg = $('#m').val();
          $('#m').val('');

          markers[0].currentMsg = currentMsg;
          markers[0].marker.setPopupContent('<p>' + currentMsg + '</p>');

          return false;
        }
        else {
          firstPost = false;
          myname = $('#m').val();
          $('input').attr('placeholder', '');
          socket.emit('chat message', {
            name: myname,
            text: 'チャットに参加しました'
          });
          currentMsg = 'チャットに参加しました';
          $('#m').val('');
          initMap();
          return false;
        }
      });
      socket.on('chat message', function(msg) {
        console.log('chat!!: ', msg);
        $('#messages').append($('<li/>').text(msg.name + ': ' + msg.text));

        for(var i=0; i<markers.length; i++) {
          console.log(markers[i]);
          if(markers[i].name === msg.name) {
            console.log(msg.name, msg.text);
            console.log(markers[i].marker);
            markers[i].currentMsg = msg.text;
            markers[i].marker.bindPopup('<p>' + msg.text + '</p>').openPopup();
          }
        }
      });

      // マップ
      function initMap() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(zoomToLocation, locationError);
          navigator.geolocation.watchPosition(showLocation, locationError);
        }
      }

      function zoomToLocation(e) {
        console.log(e);
        var lat = e.coords.latitude;
        var long = e.coords.longitude;
        // マップ
        map = L.map('map', { closePopupOnClick: false }).setView([lat, long], 16);
        L.esri.basemapLayer('Topographic').addTo(map);
        //var marker = L.marker([lat, long], { alt: 'people', title: myname }).bindLabel(myname, { noHide: true }).addTo(map);
        var marker = L.marker([lat, long], { alt: 'people', title: myname }).addTo(map);
        marker.bindPopup('<p>' + currentMsg + '</p>').openPopup();
        console.log("add marker: ", marker);
        markers.push({
          marker: marker,
          name: myname,
          currentMsg: currentMsg
        });
        console.log(markers[0]);

        socket.emit('map message', {
          name: myname,
          lat: lat,
          long: long
        });

        socket.on('map message', function(msg) {
          console.log('map!!: ', msg);
          var othernames = [];
          var nosamename = true;

          console.log(markers[0]);
          for(var i=0; i<markers.length; i++) {
            console.log(markers[i]);
            if(markers[i].name === msg.name) {
              nosamename = false;
              markers[i].marker.setLatLng([msg.lat, msg.long]);
              if(msg.name === myname) {
                map.panTo([msg.lat, msg.long]);
              }
            }
          }

          if(nosamename === true) {
            console.log("NEW PEOPLE!!");
            //var marker = L.marker([msg.lat, msg.long], { alt: 'people', title: msg.name }).bindLabel(msg.name, { noHide: true }).addTo(map);
            var marker = L.marker([msg.lat, msg.long], { alt: 'people', title: msg.name }).addTo(map);
            marker.bindPopup('<p></p>').openPopup();
            markers.push({
              marker: marker,
              name: msg.name,
              currentMsg: ''
            });
          }
        });
      }
      function showLocation(e) {
        console.log(e);
        var lat = e.coords.latitude;
        var long = e.coords.longitude;
        socket.emit('map message', {
          name: myname,
          lat: lat,
          long: long
        });
      }
      function locationError(e) {
        console.log(e);
      }
    </script>

  </body>
</html>
